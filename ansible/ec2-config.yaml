---
- name: Set up Mixtape Study VM
  hosts: mixtapehosts
  become: true
  vars_files:
    # This path needs to be relative to the playbook, not the command
    - ../.priv/vault
  vars:
    mixtape_version: 1.1.2
  tasks:
    - name: Ping to make sure they're out there
      ansible.builtin.ping:

    - name: Install all the packages we'll need
      ansible.builtin.dnf:
        name:
          - docker
          - python3.11
          - python3.11-pip
        state: present

    - name: Install Python Docker modules
      ansible.builtin.pip:
        name:
          - wheel
          - docker
        executable: /usr/bin/pip3.11

    # Amazon Linux 2023 doesn't package docker-compose
    - name: Download docker-compose
      ansible.builtin.uri:
        # yamllint disable-line rule:line-length
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-linux-aarch64
        follow_redirects: all
        dest: /usr/bin/docker-compose
        mode: '0755'
        creates: /usr/bin/docker-compose

    - name: Create directory for docker plugins
      ansible.builtin.file:
        path: /usr/local/lib/docker/cli-plugins
        state: directory
        mode: '0755'

    - name: Symlink docker-compose until docker plugin directory
      ansible.builtin.file:
        src: /usr/bin/docker-compose
        dest: /usr/local/lib/docker/cli-plugins/docker-compose
        state: link

    - name: Ensure Docker's running
      ansible.builtin.systemd_service:
        state: started
        name: docker

    - name: Create user
      ansible.builtin.user:
        name: mixtapestudy
        groups: docker
        create_home: true
        home: /opt/mixtapestudy

    - name: Create directory for logs
      ansible.builtin.file:
        path: /opt/mixtapestudy/log
        owner: mixtapestudy
        group: mixtapestudy
        state: directory
        mode: '0750'

    - name: Copy docker-compose
      ansible.builtin.copy:
        src: ../docker-compose.yml
        dest: /opt/mixtapestudy/docker-compose.yml
        owner: mixtapestudy
        group: mixtapestudy
        mode: '0400'

    # This could be done with ansible vault in the future of necessary
    - name: Copy .env file (Must exist locally in './.priv/.env')
      ansible.builtin.copy:
        src: ../.priv/.env
        dest: /opt/mixtapestudy/.env
        owner: mixtapestudy
        group: mixtapestudy
        mode: '0400'

    - name: Clear build directory (just in case)
      ansible.builtin.file:
        path: /opt/mixtapestudy/build
        state: absent

    - name: Copy latest code to server
      ansible.posix.synchronize:
        src: ../mixtapestudy
        dest: /opt/mixtapestudy/build

    - name: Log in to AWS's ECR
      community.docker.docker_login:
        registry_url: "{{ docker_domain }}"
        username: AWS
        password: "{{ docker_password }}"

    - name: Build and push Nginx Docker image
      community.docker.docker_image:
        build:
          path: /opt/mixtapestudy/build/mixtapestudy/nginx
        name: "{{ docker_domain }}/mixtapestudy/nginx"
        tag: "{{ mixtape_version }}"
        push: true
        source: build
      notify:
        - Stop docker stack

    - name: Build and push Mixtapestudy Docker image
      community.docker.docker_image:
        build:
          path: /opt/mixtapestudy/build/mixtapestudy
        name: "{{ docker_domain }}/mixtapestudy/mixtapestudy"
        tag: "{{ mixtape_version }}"
        push: true
        source: build
      notify:
        - Stop docker stack

    - name: Add latest tags to both docker images
      community.docker.docker_image:
        name: "{{docker_domain}}/mixtapestudy/{{ item }}:{{ mixtape_version }}"
        repository: "{{ docker_domain }}/mixtapestudy/{{ item }}:latest"
        force_tag: true
        push: true
        source: local
      with_items:
        - nginx
        - mixtapestudy

    - name: Start docker
      debug:
        msg: 'Just calls the start_docker stack handler'
      changed_when: true
      notify:
        - Start docker stack

  handlers:
    - name: Stop docker stack
      community.docker.docker_compose_v2:
        project_src: /opt/mixtapestudy
        state: stopped
      notify:
        - Start docker stack
    - name: Start docker stack
      community.docker.docker_compose_v2:
        project_src: /opt/mixtapestudy
